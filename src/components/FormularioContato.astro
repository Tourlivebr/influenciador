---
/* Lista de tipos de experiências e programações disponíveis */
const experiencias = [
  // Tipos de Viajantes
  'Casais',
  'Lua de Mel',
  'Família',
  'Pet Friendly',
  'Terceira Idade',
  'Grupos',
  // Estilos de Viagem
  'Econômica',
  'Prime',
  'Exclusivo',
  'Particular',
  // Interesses Específicos
  'Crianças',
  'Esporte',
  'Cultura',
  'Caminhada',
  'Aventura',
  'Natureza',
  'Gastronomia'
];
---
<div class="max-w-7xl mx-auto px-4 py-8 lg:py-12">
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-12 items-start">
    <!-- Coluna Esquerda: Informações e Estatísticas -->
    <div class="order-2 lg:order-1 space-y-6">
      <!-- Chamada Principal -->
      <div class="text-center lg:text-left">
        <h2 class="text-2xl lg:text-3xl xl:text-4xl font-bold text-gray-900 dark:text-white mb-6">
          Vamos Criar Sua Experiência Única!
        </h2>

        <!-- Balão de Fala -->
        <div class="relative bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-700 dark:to-gray-600 rounded-2xl p-4 lg:p-6 shadow-lg mb-6">
          <div class="text-center lg:text-left">
            <p class="text-base lg:text-lg text-gray-600 dark:text-gray-300 leading-relaxed">
              Vamos te ajudar a montar uma experiência personalizada inesquecível na Serra Gaúcha! 
              
            </p>
          </div>
        </div>

        <!-- Benefícios -->
        <div class="space-y-3 mb-6">
          <div class="flex items-center justify-center lg:justify-start space-x-3">
            <div class="w-2 h-2 bg-green-500 rounded-full"></div>
            <span class="text-gray-600 dark:text-gray-300">Dicas exclusivas de quem vive aqui</span>
          </div>
          <div class="flex items-center justify-center lg:justify-start space-x-3">
            <div class="w-2 h-2 bg-green-500 rounded-full"></div>
            <span class="text-gray-600 dark:text-gray-300">Roteiros personalizados e únicos</span>
          </div>
          <div class="flex items-center justify-center lg:justify-start space-x-3">
            <div class="w-2 h-2 bg-green-500 rounded-full"></div>
            <span class="text-gray-600 dark:text-gray-300">Suporte durante toda sua viagem</span>
          </div>
        </div>
      </div>

      <!-- Estatísticas/Destaques -->
      <div class="grid grid-cols-2 gap-3 lg:gap-4">
        <div class="bg-white dark:bg-gray-800 rounded-xl p-4 shadow-md text-center border border-gray-100 dark:border-gray-700">
          <div class="text-2xl lg:text-3xl font-bold text-gray-700 dark:text-gray-300 mb-1">17000+</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Experiências Criadas</div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-xl p-4 shadow-md text-center border border-gray-100 dark:border-gray-700">
          <div class="text-2xl lg:text-3xl font-bold text-gray-700 dark:text-gray-300 mb-1">50+</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Locais Únicos</div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-xl p-4 shadow-md text-center border border-gray-100 dark:border-gray-700">
          <div class="text-2xl lg:text-3xl font-bold text-gray-700 dark:text-gray-300 mb-1">5★</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Avaliação</div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-xl p-4 shadow-md text-center border border-gray-100 dark:border-gray-700">
          <div class="text-2xl lg:text-3xl font-bold text-gray-700 dark:text-gray-300 mb-1">Consultoria</div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Personalizada</div>
        </div>
      </div>
    </div>

    <!-- Coluna Direita: Formulário -->
    <div class="order-1 lg:order-2">
      <!-- Cabeçalho do Formulário -->
      <div class="text-center mb-6">
        <p class="text-gray-600 dark:text-gray-400 text-sm">
          Conte-me seus sonhos e vou criar sua experiência ideal
        </p>
      </div>

      <!-- Formulário -->
      <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-4 lg:p-6 border border-gray-100 dark:border-gray-700">
        <form id="contactForm" class="space-y-5" autocomplete="on" novalidate>
          <!-- Nome -->
          <div>
            <label for="nome" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Nome Completo *
            </label>
            <input
              type="text"
              id="nome"
              name="nome"
              required
              autocomplete="name"
              class="w-full px-4 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors"
              placeholder="Digite seu nome completo"
            />
          </div>

          <!-- Data -->
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Quando você gostaria de viver essa experiência? *
            </label>
            <div class="grid grid-cols-3 gap-2 sm:gap-3">
              <div>
                <select
                  id="dia"
                  name="dia"
                  required
                  class="w-full px-2 sm:px-3 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors"
                >
                  <option value="">Dia</option>
                  {Array.from({ length: 31 }, (_, i) => i + 1).map(day => (
                    <option value={String(day).padStart(2,'0')}>{day}</option>
                  ))}
                </select>
              </div>
              <div>
                <select
                  id="mes"
                  name="mes"
                  required
                  class="w-full px-2 sm:px-3 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors"
                >
                  <option value="">Mês</option>
                  <option value="01">Jan</option>
                  <option value="02">Fev</option>
                  <option value="03">Mar</option>
                  <option value="04">Abr</option>
                  <option value="05">Mai</option>
                  <option value="06">Jun</option>
                  <option value="07">Jul</option>
                  <option value="08">Ago</option>
                  <option value="09">Set</option>
                  <option value="10">Out</option>
                  <option value="11">Nov</option>
                  <option value="12">Dez</option>
                </select>
              </div>
              <div>
                <select
                  id="ano"
                  name="ano"
                  required
                  class="w-full px-2 sm:px-3 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors"
                >
                  <option value="">Ano</option>
                  {Array.from({ length: 3 }, (_, i) => new Date().getFullYear() + i).map(year => (
                    <option value={year}>{year}</option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          <!-- Passeios de Interesse -->
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Que tipo de experiências te interessam? * <span class="text-xs text-gray-500">(Selecione uma ou mais)</span>
            </label>
            <div class="relative">
              <button
                type="button"
                id="experienciasDropdown"
                class="w-full px-4 py-3 text-base text-left border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors flex items-center justify-between"
              >
                <span id="experienciasSelected" class="text-gray-500 dark:text-gray-400">Selecione suas experiências favoritas...</span>
                <svg id="dropdownIcon" class="w-5 h-5 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              
              <div id="experienciasMenu" class="hidden absolute z-10 w-full mt-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg max-h-60 overflow-y-auto">
                {experiencias.map(experiencia => (
                  <label class="flex items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-600 cursor-pointer border-b border-gray-100 dark:border-gray-600 last:border-b-0">
                    <input
                      type="checkbox"
                      name="experiencias"
                      value={experiencia}
                      class="mr-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    />
                    <span class="text-sm text-gray-700 dark:text-gray-300">{experiencia}</span>
                  </label>
                ))}
              </div>
            </div>
            
            <!-- Tags dos passeios selecionados -->
            <div id="selectedTags" class="mt-3 flex flex-wrap gap-2 min-h-[24px]"></div>
            <p class="text-xs text-gray-500 dark:text-gray-400 mt-2">
              💡 Clique no menu acima para selecionar múltiplas experiências
            </p>
          </div>

          <!-- Telefone -->
          <div>
            <label for="telefone" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Telefone/WhatsApp *
            </label>
            <input
              type="tel"
              id="telefone"
              name="telefone"
              required
              inputmode="tel"
              autocomplete="tel"
              class="w-full px-4 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors"
              placeholder="(00) 00000-0000"
            />
          </div>

          <!-- Mensagem -->
          <div>
            <label for="mensagem" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Conte-me mais sobre seus sonhos de viagem
            </label>
            <textarea
              id="mensagem"
              name="mensagem"
              rows="4"
              class="w-full px-4 py-3 text-base border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors resize-none"
              placeholder="Descreva o que você espera dessa experiência, quantas pessoas vão, se tem alguma preferência especial, orçamento aproximado..."
            ></textarea>
          </div>

          <!-- Botão de Envio -->
          <div class="pt-2">
            <button
              type="submit"
              class="w-full bg-green-600 hover:bg-green-700 active:bg-green-800 text-white font-semibold py-4 px-6 rounded-lg transition-all duration-200 flex items-center justify-center gap-3 text-base lg:text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
            >
              <svg class="w-5 h-5 lg:w-6 lg:h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.479 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981z"/>
                <path d="M11.893 5.5c2.998 0 5.434 2.429 5.437 5.42-.003 2.991-2.434 5.42-5.437 5.42-2.998 0-5.434-2.429-5.437-5.42.003-2.991 2.434-5.20 5.437-5.42z"/>
              </svg>
              Vamos Criar Sua Experiência Única!
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    const telefoneInput = document.getElementById('telefone');

    // Elementos do dropdown de experiências
    const dropdownButton = document.getElementById('experienciasDropdown');
    const dropdownMenu = document.getElementById('experienciasMenu');
    const dropdownIcon = document.getElementById('dropdownIcon');
    const selectedText = document.getElementById('experienciasSelected');
    const selectedTags = document.getElementById('selectedTags');
    const checkboxes = dropdownMenu.querySelectorAll('input[type="checkbox"]');

    // Util: escolhe endpoint do WhatsApp mais estável por ambiente
    function buildWhatsAppUrl(phoneDigits, text) {
      // 1) Normaliza quebras de linha e codifica TUDO
      const normalized = String(text).replace(/\r\n/g, '\n');
      const textoCodificado = encodeURIComponent(normalized);

      // 2) Número apenas dígitos (wa.me não aceita +, espaços, etc.)
      const numero = String(phoneDigits).replace(/\D/g, '');

      // 3) Desktop costuma ir melhor com api.whatsapp.com
      const isMobile = /Android|iPhone|iPad|iPod|Windows Phone/i.test(navigator.userAgent);

      if (isMobile) {
        // Em mobile, wa.me abre direto no app
        return `https://wa.me/${numero}?text=${textoCodificado}`;
      }
      // Fallback/desktop
      return `https://api.whatsapp.com/send?phone=${numero}&text=${textoCodificado}`;
    }

    // Controle do dropdown
    dropdownButton.addEventListener('click', function(e) {
      e.preventDefault();
      const isOpen = !dropdownMenu.classList.contains('hidden');
      if (isOpen) {
        dropdownMenu.classList.add('hidden');
        dropdownIcon.style.transform = 'rotate(0deg)';
      } else {
        dropdownMenu.classList.remove('hidden');
        dropdownIcon.style.transform = 'rotate(180deg)';
      }
    });

    // Fechar dropdown ao clicar fora
    document.addEventListener('click', function(e) {
      if (!dropdownButton.contains(e.target) && !dropdownMenu.contains(e.target)) {
        dropdownMenu.classList.add('hidden');
        dropdownIcon.style.transform = 'rotate(0deg)';
      }
    });

    // Atualizar seleções
    function updateSelections() {
      const selected = Array.from(checkboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value);

      // Atualizar texto do botão
      if (selected.length === 0) {
        selectedText.textContent = 'Selecione suas experiências favoritas...';
        selectedText.className = 'text-gray-500 dark:text-gray-400';
      } else if (selected.length === 1) {
        selectedText.textContent = selected[0];
        selectedText.className = 'text-gray-900 dark:text-white';
      } else {
        selectedText.textContent = `${selected.length} experiências selecionadas`;
        selectedText.className = 'text-gray-900 dark:text-white';
      }

      // Atualizar tags
      selectedTags.innerHTML = '';
      selected.forEach(passeio => {
        const tag = document.createElement('span');
        tag.className = 'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';
        tag.innerHTML = `
          ${passeio}
          <button type="button" class="ml-1 text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-100" onclick="removeSelection('${passeio.replace(/'/g, "\\'")}')">
            <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
          </button>
        `;
        selectedTags.appendChild(tag);
      });
    }

    // Remover seleção via tag (exposto globalmente)
    window.removeSelection = function(passeio) {
      const checkbox = Array.from(checkboxes).find(cb => cb.value === passeio);
      if (checkbox) {
        checkbox.checked = false;
        updateSelections();
      }
    };

    // Listener para mudanças nos checkboxes
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', updateSelections);
    });

    // Máscara para telefone
    telefoneInput.addEventListener('input', function(e) {
      let value = e.target.value.replace(/\D/g, '');
      if (value.length <= 11) {
        if (value.length <= 2) {
          value = value.replace(/(\d{0,2})/, '($1');
        } else if (value.length <= 7) {
          value = value.replace(/(\d{2})(\d{0,5})/, '($1) $2');
        } else {
          value = value.replace(/(\d{2})(\d{5})(\d{0,4})/, '($1) $2-$3');
        }
      }
      e.target.value = value;
    });

    // Envio do formulário
    form.addEventListener('submit', function(e) {
      e.preventDefault();

      const formData = new FormData(form);
      const nome = String(formData.get('nome') || '').trim();
      const dia = String(formData.get('dia') || '').padStart(2, '0');
      const mes = String(formData.get('mes') || '');
      const ano = String(formData.get('ano') || '');
      const telefone = String(formData.get('telefone') || '').trim();
      const mensagem = String(formData.get('mensagem') || 'Nenhuma mensagem adicional').trim();

      // Obter experiências selecionadas
      const experienciasSelecionadas = formData.getAll('experiencias');

      // Validação básica
      if (!nome || !dia || !mes || !ano || !telefone) {
        alert('Por favor, preencha todos os campos obrigatórios.');
        return;
      }
      if (experienciasSelecionadas.length === 0) {
        alert('Por favor, selecione pelo menos uma experiência.');
        return;
      }

      // Formatação da data
      const dataFormatada = `${dia}/${mes}/${ano}`;

      // Formatação das experiências selecionadas
      const experienciasTexto = experienciasSelecionadas
        .map((exp, index) => `${index + 1}. ${exp}`)
        .join('\n');

      // ===== Mensagem para WhatsApp (com emojis e negrito) =====
      const mensagemWhatsApp =
        `✨ *Solicitação de Experiência Personalizada* ✨\n\n` +
        `👤 *Nome:* ${nome}\n` +
        `📅 *Data Desejada:* ${dataFormatada}\n\n` +
        `🎯 *Experiências de Interesse:*\n${experienciasTexto}\n\n` +
        `📱 *Telefone:* ${telefone}\n` +
        `💭 *Sonhos de Viagem:* ${mensagem}\n\n` +
        `📍 *Enviado através do site* - Gramado Diferente\n` +
        `⏰ *${new Date().toLocaleString('pt-BR')}*`;

      // Número do WhatsApp (seu número de atendimento) — APENAS DÍGITOS
      const numeroWhatsApp = '5554993723094';

      // Monta URL correta e codifica TUDO que vai em text=
      const urlWhatsApp = buildWhatsAppUrl(numeroWhatsApp, mensagemWhatsApp);

      // Abrir WhatsApp
      try {
        window.open(urlWhatsApp, '_blank', 'noopener,noreferrer');
      } catch (err) {
        console.error('Falha ao abrir WhatsApp:', err);
        alert('Não foi possível abrir o WhatsApp. Tente novamente.');
        return;
      }

      // Limpar formulário após envio
      form.reset();
      updateSelections(); // Limpar seleções do dropdown

      // Feedback visual
      const button = form.querySelector('button[type="submit"]');
      const originalText = button.innerHTML;
      button.innerHTML = `
        <svg class="w-6 h-6 animate-spin" fill="none" viewBox="0 0 24 24" aria-hidden="true">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Redirecionando...
      `;
      setTimeout(() => (button.innerHTML = originalText), 2000);
    });
  });
</script>
